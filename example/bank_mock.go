/*
* CODE GENERATED AUTOMATICALLY GENERATED BY github.com/quii/modest-mock
* THIS FILE SHOULD NOT BE EDITED BY HAND. UNLESS YOU ENJOY SAD TIMES.
*/

package example

type BankMock struct {
	Calls struct {
		CheckPin []struct {
			cardNumber int

			pin int
		}

		Deposit []struct {
			accountNumber string

			amount int
		}

		Withdraw []struct {
			accountNumber string

			amount int
		}
	}

	Returns struct {
		CheckPin []struct {
			accountNumber int

			success bool
		}

		Deposit []struct {
			newBalance int

			err error
		}

		Withdraw []struct {
			newBalance int

			err error
		}
	}
}

func (b *BankMock) CheckPin(cardNumber int, pin int) (accountNumber int, success bool) {
	call := struct {
		cardNumber int
		pin        int
	}{cardNumber, pin}
	b.Calls.CheckPin = append(b.Calls.CheckPin, call)
	return b.Returns.CheckPin[len(b.Calls.CheckPin)-1].accountNumber, b.Returns.CheckPin[len(b.Calls.CheckPin)-1].success
}

func (b *BankMock) Deposit(accountNumber string, amount int) (newBalance int, err error) {
	call := struct {
		accountNumber string
		amount        int
	}{accountNumber, amount}
	b.Calls.Deposit = append(b.Calls.Deposit, call)
	return b.Returns.Deposit[len(b.Calls.Deposit)-1].newBalance, b.Returns.Deposit[len(b.Calls.Deposit)-1].err
}

func (b *BankMock) Withdraw(accountNumber string, amount int) (newBalance int, err error) {
	call := struct {
		accountNumber string
		amount        int
	}{accountNumber, amount}
	b.Calls.Withdraw = append(b.Calls.Withdraw, call)
	return b.Returns.Withdraw[len(b.Calls.Withdraw)-1].newBalance, b.Returns.Withdraw[len(b.Calls.Withdraw)-1].err
}
